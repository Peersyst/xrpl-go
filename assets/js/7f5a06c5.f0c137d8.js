"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[124],{8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var r=n(6540);const c={},s=r.createContext(c);function o(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),r.createElement(s.Provider,{value:t},e.children)}},9328:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"xrpl/faucet","title":"faucet","description":"Overview","source":"@site/docs/xrpl/faucet.md","sourceDirName":"xrpl","slug":"/xrpl/faucet","permalink":"/docs/xrpl/faucet","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/xrpl/faucet.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"currency","permalink":"/docs/xrpl/currency"},"next":{"title":"hash","permalink":"/docs/xrpl/hash"}}');var c=n(4848),s=n(8453);const o={},a="faucet",i={},d=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.header,{children:(0,c.jsx)(t.h1,{id:"faucet",children:"faucet"})}),"\n",(0,c.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.code,{children:"faucet"})," is a package that allows the user to get XRP for testing purposes on ",(0,c.jsx)(t.strong,{children:"testnet"})," and ",(0,c.jsx)(t.strong,{children:"devnet"})," ledgers and even from custom chains. To be able to fund your accounts programmatically, you can initialize the desired ",(0,c.jsx)(t.code,{children:"FaucetProvider"})," for the ledger you want to use."]}),"\n",(0,c.jsxs)(t.p,{children:["The package already exposes the ",(0,c.jsx)(t.code,{children:"TestnetFaucetProvider"})," and ",(0,c.jsx)(t.code,{children:"DevnetFaucetProvider"})," providers. If you want to use a custom chain, you can implement the ",(0,c.jsx)(t.code,{children:"FaucetProvider"})," interface and use your own provider."]}),"\n",(0,c.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,c.jsx)(t.p,{children:"To import the package, you can use the following code:"}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-go",children:'import "github.com/Peersyst/xrpl-go/xrpl/faucet"\n'})}),"\n",(0,c.jsx)(t.p,{children:"For devnet, you can use the following code:"}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-go",children:'devnetFaucet := faucet.NewDevnetFaucetProvider()\n\nerr := devnetFaucet.FundWallet("rJ96831v5JXxna35JYvsW9VRmENwq23ib9")\nif err != nil {\n    // ...\n}\n'})}),"\n",(0,c.jsx)(t.p,{children:"for testnet, you can use the following code:"}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-go",children:'testnetFaucet := faucet.NewTestnetFaucetProvider()\n\nerr := testnetFaucet.FundWallet("rJ96831v5JXxna35JYvsW9VRmENwq23ib9")\nif err != nil {\n    // ...\n}\n'})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}}}]);